name: Build and test containers

on:
  # push:
  #   branches:
  #     - main
  pull_request:
    branches:
      - main
  schedule:
    # Every Sunday at 8:05 UTC
    - cron: "5 8 * * 0"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [313]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup environment file
      run: |
        echo "Copying .env.example to .env..."
        cp .env.example .env
        sed -i "s/PYTHON_VERSION=.*/PYTHON_VERSION=${{ matrix.python-version }}/" '.env'
        echo "Updated .env with Python ${{ matrix.python-version }}:"
        cat .env

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20'

    - name: Install Bun
      run: |
        curl -fsSL https://bun.sh/install | bash
        echo "$HOME/.bun/bin" >> $GITHUB_PATH

    - name: Build frontend
      run: |
        cd web
        bun install
        bun run build
        cd ..

    - name: Spin up container
      run: |
        echo "Building container for Python ${{ matrix.python-version }}."
        docker compose -f docker-compose.yml up -d

    - name: Wait and check the health of the container
      run: |
        attempts=0

        while [ $attempts -lt 5 ]; do
          if curl http://localhost:5002; then
            echo "Success!"
            exit 0
          fi

          attempts=$((attempts+1))
          sleep 1
        done

        echo "Failed after $attempts attempts"
        echo "Container logs:"
        docker compose logs
        exit 1
