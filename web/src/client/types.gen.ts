// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};

/**
 * Body_login_for_access_token_token_post
 */
export type BodyLoginForAccessTokenTokenPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * Token
 */
export type Token = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type LoginForAccessTokenTokenPostData = {
    body: BodyLoginForAccessTokenTokenPost;
    path?: never;
    query?: never;
    url: '/token';
};

export type LoginForAccessTokenTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginForAccessTokenTokenPostError = LoginForAccessTokenTokenPostErrors[keyof LoginForAccessTokenTokenPostErrors];

export type LoginForAccessTokenTokenPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type LoginForAccessTokenTokenPostResponse = LoginForAccessTokenTokenPostResponses[keyof LoginForAccessTokenTokenPostResponses];

export type HealthHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthHealthGetResponses = {
    /**
     * Response Health Health Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type HealthHealthGetResponse = HealthHealthGetResponses[keyof HealthHealthGetResponses];

export type ViewAApiANumGetData = {
    body?: never;
    path: {
        /**
         * Num
         */
        num: number;
    };
    query?: never;
    url: '/api_a/{num}';
};

export type ViewAApiANumGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ViewAApiANumGetError = ViewAApiANumGetErrors[keyof ViewAApiANumGetErrors];

export type ViewAApiANumGetResponses = {
    /**
     * Response View A Api A  Num  Get
     * Successful Response
     */
    200: {
        [key: string]: number;
    };
};

export type ViewAApiANumGetResponse = ViewAApiANumGetResponses[keyof ViewAApiANumGetResponses];

export type ViewBApiBNumGetData = {
    body?: never;
    path: {
        /**
         * Num
         */
        num: number;
    };
    query?: never;
    url: '/api_b/{num}';
};

export type ViewBApiBNumGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ViewBApiBNumGetError = ViewBApiBNumGetErrors[keyof ViewBApiBNumGetErrors];

export type ViewBApiBNumGetResponses = {
    /**
     * Response View B Api B  Num  Get
     * Successful Response
     */
    200: {
        [key: string]: number;
    };
};

export type ViewBApiBNumGetResponse = ViewBApiBNumGetResponses[keyof ViewBApiBNumGetResponses];

export type ServeSpaFullPathGetData = {
    body?: never;
    path: {
        /**
         * Full Path
         */
        full_path: string;
    };
    query?: never;
    url: '/{full_path}';
};

export type ServeSpaFullPathGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ServeSpaFullPathGetError = ServeSpaFullPathGetErrors[keyof ServeSpaFullPathGetErrors];

export type ServeSpaFullPathGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
